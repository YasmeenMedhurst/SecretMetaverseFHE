import { ethers } from "hardhat";

async function main() {
    console.log("üöÄ ÈÉ®ÁΩ≤Êõ¥Êñ∞ÁöÑ SecretMetaverseFHE ÂêàÁ∫¶...");

    // Ëé∑ÂèñÈÉ®ÁΩ≤Ë¥¶Êà∑
    const [deployer] = await ethers.getSigners();
    console.log("üë§ ÈÉ®ÁΩ≤Ë¥¶Êà∑:", deployer.address);
    console.log("üí∞ Ë¥¶Êà∑‰ΩôÈ¢ù:", ethers.formatEther(await deployer.provider.getBalance(deployer.address)), "ETH");

    // ÈÉ®ÁΩ≤ SecretMetaverseFHE ÂêàÁ∫¶
    console.log("üìã ÈÉ®ÁΩ≤ SecretMetaverseFHEÔºàÂåÖÂê´ vote(bool) ÂáΩÊï∞Ôºâ...");
    const SecretMetaverseFHE = await ethers.getContractFactory("SecretMetaverseFHE");

    // ÈÉ®ÁΩ≤ÂêàÁ∫¶
    const contract = await SecretMetaverseFHE.deploy();
    await contract.waitForDeployment();

    const contractAddress = await contract.getAddress();
    console.log("‚úÖ SecretMetaverseFHE ÈÉ®ÁΩ≤ÊàêÂäü!");
    console.log("üìç ÂêàÁ∫¶Âú∞ÂùÄ:", contractAddress);

    // È™åËØÅÈÉ®ÁΩ≤
    console.log("\nüîç È™åËØÅÈÉ®ÁΩ≤...");
    const owner = await contract.owner();
    console.log("üëë ÂêàÁ∫¶ÊâÄÊúâËÄÖ:", owner);

    const worldCount = await contract.virtualWorldCount();
    console.log("üåç ËôöÊãü‰∏ñÁïåÊï∞Èáè:", worldCount.toString());

    const proposalCount = await contract.proposalCount();
    console.log("üìã ÊèêÊ°àÊï∞Èáè:", proposalCount.toString());

    // ÊµãËØïÊñ∞ÁöÑ vote(bool) ÂáΩÊï∞
    console.log("\nüß™ ÊµãËØï vote(bool) ÂáΩÊï∞...");
    try {
        const gasEstimate = await contract.vote.estimateGas(true);
        console.log("‚úÖ vote(bool) gas ‰º∞ÁÆó:", gasEstimate.toString());
        console.log("‚úÖ vote(bool) ÂáΩÊï∞ÂèØÁî®!");
    } catch (e) {
        console.log("‚ùå vote(bool) ÊµãËØïÂ§±Ë¥•:", e.message.substring(0, 100));
    }

    // ÂàùÂßãÂåñÂêàÁ∫¶Êï∞ÊçÆ
    console.log("\nüîß ÂàùÂßãÂåñÂêàÁ∫¶Êï∞ÊçÆ...");

    try {
        console.log("ÂàùÂßãÂåñËôöÊãü‰∏ñÁïå...");
        const initWorldsTx = await contract.initializeWorlds();
        await initWorldsTx.wait();
        console.log("‚úÖ ËôöÊãü‰∏ñÁïåÂàùÂßãÂåñÂÆåÊàê");

        console.log("ÂàùÂßãÂåñÊèêÊ°à...");
        const initProposalsTx = await contract.initializeProposals();
        await initProposalsTx.wait();
        console.log("‚úÖ ÊèêÊ°àÂàùÂßãÂåñÂÆåÊàê");

        // ÂÜçÊ¨°Ê£ÄÊü•Êï∞ÊçÆ
        const newWorldCount = await contract.virtualWorldCount();
        const newProposalCount = await contract.proposalCount();
        console.log("üåç ËôöÊãü‰∏ñÁïåÊï∞Èáè:", newWorldCount.toString());
        console.log("üìã ÊèêÊ°àÊï∞Èáè:", newProposalCount.toString());

    } catch (error) {
        console.log("‚ö†Ô∏è ÂàùÂßãÂåñÂ§±Ë¥•:", error.message);
    }

    // ËæìÂá∫ÂêàÁ∫¶‰ø°ÊÅØ
    console.log("\nüìã ÈÉ®ÁΩ≤ÊÄªÁªì:");
    console.log("ÂêàÁ∫¶ÂêçÁß∞: SecretMetaverseFHE (Êõ¥Êñ∞ÁâàÊú¨)");
    console.log("ÂêàÁ∫¶Âú∞ÂùÄ:", contractAddress);
    console.log("ÊîØÊåÅÂáΩÊï∞: vote(bool), voteFHE(externalEbool,bytes)");
    console.log("ÁΩëÁªú: Sepolia Testnet");
    console.log("ÂâçÁ´ØÂÖºÂÆπ: ‚úÖ ÊîØÊåÅ vote(bool) Ë∞ÉÁî®");
    console.log("FHE ÊîØÊåÅ: ‚úÖ ‰øùÁïôÂÆåÊï¥ FHE ÂäüËÉΩ");

    return contractAddress;
}

main()
    .then((address) => {
        console.log(`\nüéâ ÈÉ®ÁΩ≤ÂÆåÊàê! Êñ∞ÂêàÁ∫¶Âú∞ÂùÄ: ${address}`);
        console.log("ËØ∑Êõ¥Êñ∞ÂâçÁ´ØÁöÑ CONTRACT_ADDRESS ‰∏∫Ê≠§Âú∞ÂùÄ");
        process.exit(0);
    })
    .catch((error) => {
        console.error("‚ùå ÈÉ®ÁΩ≤Â§±Ë¥•:", error);
        process.exit(1);
    });